import{FSharpRef}from"./Types.js";export function tryParse(r,t){if(null!=r&&/\S/.test(r)){const n=+r.replace("_","");if(!Number.isNaN(n))return t.contents=n,!0}return!1}export function parse(r){const t=new FSharpRef(0);if(tryParse(r,t))return t.contents;throw new Error("Input string was not in a correct format.")}export function isPositiveInfinity(r){return r===Number.POSITIVE_INFINITY}export function isNegativeInfinity(r){return r===Number.NEGATIVE_INFINITY}export function isInfinity(r){return r===Number.POSITIVE_INFINITY||r===Number.NEGATIVE_INFINITY}