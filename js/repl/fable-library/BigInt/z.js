import{BigNatModule_factorial,BigNatModule_ofString,BigNatModule_toFloat,BigNatModule_toUInt64,BigNatModule_toUInt32,BigNatModule_pow,BigNatModule_two,BigNatModule_rem,BigNatModule_lte,BigNatModule_hcf,BigNatModule_bitXor,BigNatModule_bitOr,BigNatModule_bitAnd,BigNatModule_divmod,BigNatModule_mul,BigNatModule_isOne,BigNatModule_sub,BigNatModule_gte,BigNatModule_scale,BigNatModule_one,BigNatModule_add,BigNatModule_ofInt64,BigNatModule_hash,BigNatModule_gt,BigNatModule_lt,BigNatModule_equal,BigNatModule_getSmall,BigNatModule_isSmall,BigNatModule_ofInt32,BigNatModule_toString,BigNatModule_isZero}from"./n.js";import{Record,toString}from"../Types.js";import{class_type}from"../Reflection.js";import{initialize}from"../Array.js";import{op_Addition,op_Multiply,fromValue,equals,fromBits,compare,fromInteger,op_UnaryNegation}from"../Long.js";import{op_UnaryNegation_Int32}from"../Int32.js";import Decimal from"../Decimal.js";export class BigInteger extends Record{constructor(e,t){super(),this.signInt=0|e,this.v=t}toString(){const e=this,t=0|BigInteger__get_SignInt(e);if(-1===t)return BigNatModule_isZero(BigInteger__get_V(e))?"0":"-"+BigNatModule_toString(BigInteger__get_V(e));if(0===t)return"0";if(1===t)return BigNatModule_toString(BigInteger__get_V(e));throw new Error("signs should be +/- 1 or 0")}Equals(e){return e instanceof BigInteger&&BigInteger_op_Equality_56F059C0(this,e)}GetHashCode(){return 0|BigInteger_hash_Z665282C2(this)}toJSON(){return toString(this)}CompareTo(e){if(e instanceof BigInteger)return 0|BigInteger_compare_56F059C0(this,e);throw new Error("the objects are not comparable\\nParameter name: obj")}}export function BigInteger$reflection(){return class_type("BigInt.BigInteger",void 0,BigInteger,class_type("System.ValueType"))}export function BigInteger_$ctor_Z2BE94A1(e,t){return new BigInteger(e,t)}BigInteger.smallLim=4096,BigInteger.smallPosTab=initialize(BigInteger.smallLim,BigNatModule_ofInt32,null),BigInteger.one=BigInteger_$ctor_Z524259A4(1),BigInteger.two=BigInteger_$ctor_Z524259A4(2),BigInteger.zero=BigInteger_$ctor_Z524259A4(0);export function BigInteger_nat_Z67CCE57D(e){return BigNatModule_isSmall(e)&&BigNatModule_getSmall(e)<BigInteger.smallLim?BigInteger.smallPosTab[BigNatModule_getSmall(e)]:e}export function BigInteger_create_Z2BE94A1(e,t){return BigInteger_$ctor_Z2BE94A1(e,BigInteger_nat_Z67CCE57D(t))}export function BigInteger_posn_Z67CCE57D(e){return BigInteger_$ctor_Z2BE94A1(1,BigInteger_nat_Z67CCE57D(e))}export function BigInteger_negn_Z67CCE57D(e){return BigInteger_$ctor_Z2BE94A1(-1,BigInteger_nat_Z67CCE57D(e))}export function BigInteger__get_Sign(e){return BigInteger__get_IsZero(e)?0:0|e.signInt}export function BigInteger__get_SignInt(e){return e.signInt}export function BigInteger__get_V(e){return e.v}export function BigInteger_op_Equality_56F059C0(e,t){const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:0===_?8:1===_?3:9:0===g?-1===_?6:0===_?4:1===_?5:9:1===g?-1===_?2:0===_?7:1===_?0:9:9,r){case 0:case 1:return BigNatModule_equal(BigInteger__get_V(e),BigInteger__get_V(t));case 2:case 3:return!!BigNatModule_isZero(BigInteger__get_V(e))&&BigNatModule_isZero(BigInteger__get_V(t));case 4:return!0;case 5:case 6:return BigNatModule_isZero(BigInteger__get_V(t));case 7:case 8:return BigNatModule_isZero(BigInteger__get_V(e));case 9:throw new Error("signs should be +/- 1 or 0\\nParameter name: x")}}export function BigInteger_op_Inequality_56F059C0(e,t){return!BigInteger_op_Equality_56F059C0(e,t)}export function BigInteger_op_LessThan_56F059C0(e,t){const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:0===_?8:1===_?3:9:0===g?-1===_?6:0===_?4:1===_?5:9:1===g?-1===_?2:0===_?7:1===_?0:9:9,r){case 0:return BigNatModule_lt(BigInteger__get_V(e),BigInteger__get_V(t));case 1:return BigNatModule_lt(BigInteger__get_V(t),BigInteger__get_V(e));case 2:case 4:case 6:case 7:return!1;case 3:return!BigNatModule_isZero(BigInteger__get_V(e))||!BigNatModule_isZero(BigInteger__get_V(t));case 5:return!BigNatModule_isZero(BigInteger__get_V(t));case 8:return!BigNatModule_isZero(BigInteger__get_V(e));case 9:throw new Error("signs should be +/- 1 or 0\\nParameter name: x")}}export function BigInteger_op_GreaterThan_56F059C0(e,t){const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:0===_?8:1===_?3:9:0===g?-1===_?6:0===_?4:1===_?5:9:1===g?-1===_?2:0===_?7:1===_?0:9:9,r){case 0:return BigNatModule_gt(BigInteger__get_V(e),BigInteger__get_V(t));case 1:return BigNatModule_gt(BigInteger__get_V(t),BigInteger__get_V(e));case 2:return!BigNatModule_isZero(BigInteger__get_V(e))||!BigNatModule_isZero(BigInteger__get_V(t));case 3:case 4:case 5:case 8:return!1;case 6:return!BigNatModule_isZero(BigInteger__get_V(t));case 7:return!BigNatModule_isZero(BigInteger__get_V(e));case 9:throw new Error("signs should be +/- 1 or 0\\nParameter name: x")}}export function BigInteger_compare_56F059C0(e,t){return BigInteger_op_LessThan_56F059C0(e,t)?-1:BigInteger_op_Equality_56F059C0(e,t)?0:1}export function BigInteger_hash_Z665282C2(e){return 0===BigInteger__get_SignInt(e)?1:BigInteger__get_SignInt(e)+BigNatModule_hash(BigInteger__get_V(e))|0}export function BigInteger__get_StructuredDisplayString(e){return toString(e)}export function BigInteger_$ctor_Z524259A4(e){return e>=0?BigInteger_$ctor_Z2BE94A1(1,BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(e))):BigInteger_$ctor_Z2BE94A1(-1,BigInteger_nat_Z67CCE57D(-2147483648===e?BigNatModule_ofInt64(op_UnaryNegation(fromInteger(e,!1,2))):BigNatModule_ofInt32(op_UnaryNegation_Int32(e))))}export function BigInteger_$ctor_Z524259C1(e){return compare(e,fromBits(0,0,!1))>=0?BigInteger_$ctor_Z2BE94A1(1,BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(e))):equals(e,fromBits(0,2147483648,!1))?BigInteger_$ctor_Z2BE94A1(-1,BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295,2147483647,!1)),BigNatModule_one))):BigInteger_$ctor_Z2BE94A1(-1,BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(e))))}export function BigInteger_get_One(){return BigInteger.one}export function BigInteger_get_Two(){return BigInteger.two}export function BigInteger_get_Zero(){return BigInteger.zero}export function BigInteger_op_UnaryNegation_Z665282C2(e){const t=0|BigInteger__get_SignInt(e);return 0===t?BigInteger_get_Zero():BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(t),BigInteger__get_V(e))}export function BigInteger_Scale_Z320F31E(e,t){return 0===BigInteger__get_SignInt(t)?BigInteger_get_Zero():e<0?BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(t)),BigNatModule_scale(op_UnaryNegation_Int32(e),BigInteger__get_V(t))):BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(t),BigNatModule_scale(e,BigInteger__get_V(t)))}export function BigInteger_subnn_6A57060(e,t){return BigNatModule_gte(e,t)?BigInteger_posn_Z67CCE57D(BigNatModule_sub(e,t)):BigInteger_negn_Z67CCE57D(BigNatModule_sub(t,e))}export function BigInteger_addnn_6A57060(e,t){return BigInteger_posn_Z67CCE57D(BigNatModule_add(e,t))}export function BigInteger__get_IsZero(e){return 0===BigInteger__get_SignInt(e)||BigNatModule_isZero(BigInteger__get_V(e))}export function BigInteger__get_IsOne(e){return 1===BigInteger__get_SignInt(e)&&BigNatModule_isOne(BigInteger__get_V(e))}export function BigInteger_op_Addition_56F059C0(e,t){if(BigInteger__get_IsZero(t))return e;if(BigInteger__get_IsZero(e))return t;{const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:1===_?3:4:1===g?-1===_?2:1===_?0:4:4,r){case 0:return BigInteger_addnn_6A57060(BigInteger__get_V(e),BigInteger__get_V(t));case 1:return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(e),BigInteger__get_V(t)));case 2:return BigInteger_subnn_6A57060(BigInteger__get_V(e),BigInteger__get_V(t));case 3:return BigInteger_subnn_6A57060(BigInteger__get_V(t),BigInteger__get_V(e));case 4:throw new Error("signs should be +/- 1\\nParameter name: x")}}}export function BigInteger_op_Subtraction_56F059C0(e,t){if(BigInteger__get_IsZero(t))return e;if(BigInteger__get_IsZero(e))return BigInteger_op_UnaryNegation_Z665282C2(t);{const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:1===_?3:4:1===g?-1===_?2:1===_?0:4:4,r){case 0:return BigInteger_subnn_6A57060(BigInteger__get_V(e),BigInteger__get_V(t));case 1:return BigInteger_subnn_6A57060(BigInteger__get_V(t),BigInteger__get_V(e));case 2:return BigInteger_addnn_6A57060(BigInteger__get_V(e),BigInteger__get_V(t));case 3:return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(e),BigInteger__get_V(t)));case 4:throw new Error("signs should be +/- 1\\nParameter name: x")}}}export function BigInteger_op_Multiply_56F059C0(e,t){if(BigInteger__get_IsZero(e))return e;if(BigInteger__get_IsZero(t))return t;if(BigInteger__get_IsOne(e))return t;if(BigInteger__get_IsOne(t))return e;{const g=BigNatModule_mul(BigInteger__get_V(e),BigInteger__get_V(t));return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(e)*BigInteger__get_SignInt(t),g)}}export function BigInteger_DivRem_56F059C0(e,t){if(BigInteger__get_IsZero(t))throw new Error;if(BigInteger__get_IsZero(e))return[BigInteger_get_Zero(),BigInteger_get_Zero()];{const g=BigNatModule_divmod(BigInteger__get_V(e),BigInteger__get_V(t)),_=g[1],r=g[0],n=0|BigInteger__get_SignInt(e),i=0|BigInteger__get_SignInt(t);let o;switch(o=-1===n?-1===i?1:1===i?3:4:1===n?-1===i?2:1===i?0:4:4,o){case 0:return[BigInteger_posn_Z67CCE57D(r),BigInteger_posn_Z67CCE57D(_)];case 1:return[BigInteger_posn_Z67CCE57D(r),BigInteger_negn_Z67CCE57D(_)];case 2:return[BigInteger_negn_Z67CCE57D(r),BigInteger_posn_Z67CCE57D(_)];case 3:return[BigInteger_negn_Z67CCE57D(r),BigInteger_negn_Z67CCE57D(_)];case 4:throw new Error("signs should be +/- 1\\nParameter name: x")}}}export function BigInteger_op_Division_56F059C0(e,t){return BigInteger_DivRem_56F059C0(e,t)[0]}export function BigInteger_op_Modulus_56F059C0(e,t){return BigInteger_DivRem_56F059C0(e,t)[1]}export function BigInteger_op_RightShift_62E082A2(e,t){return BigInteger_op_Division_56F059C0(e,BigInteger_Pow_62E082A2(BigInteger_get_Two(),t))}export function BigInteger_op_LeftShift_62E082A2(e,t){return BigInteger_op_Multiply_56F059C0(e,BigInteger_Pow_62E082A2(BigInteger_get_Two(),t))}export function BigInteger_op_BitwiseAnd_56F059C0(e,t){return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(e),BigInteger__get_V(t)))}export function BigInteger_op_BitwiseOr_56F059C0(e,t){return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(e),BigInteger__get_V(t)))}export function BigInteger_op_ExclusiveOr_56F059C0(e,t){return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(e),BigInteger__get_V(t)))}export function BigInteger_GreatestCommonDivisor_56F059C0(e,t){const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);return 0===g?0===_?BigInteger_get_Zero():BigInteger_posn_Z67CCE57D(BigInteger__get_V(t)):BigInteger_posn_Z67CCE57D(0===_?BigInteger__get_V(e):BigNatModule_hcf(BigInteger__get_V(e),BigInteger__get_V(t)))}export function BigInteger__get_IsNegative(e){return-1===BigInteger__get_SignInt(e)&&!BigInteger__get_IsZero(e)}export function BigInteger__get_IsPositive(e){return 1===BigInteger__get_SignInt(e)&&!BigInteger__get_IsZero(e)}export function BigInteger_Abs_Z665282C2(e){return-1===BigInteger__get_SignInt(e)?BigInteger_op_UnaryNegation_Z665282C2(e):e}export function BigInteger_op_LessThanOrEqual_56F059C0(e,t){const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:0===_?6:1===_?3:9:0===g?-1===_?8:0===_?4:1===_?7:9:1===g?-1===_?2:0===_?5:1===_?0:9:9,r){case 0:return BigNatModule_lte(BigInteger__get_V(e),BigInteger__get_V(t));case 1:return BigNatModule_lte(BigInteger__get_V(t),BigInteger__get_V(e));case 2:return!!BigNatModule_isZero(BigInteger__get_V(e))&&BigNatModule_isZero(BigInteger__get_V(t));case 3:case 4:case 6:case 7:return!0;case 5:return BigNatModule_isZero(BigInteger__get_V(e));case 8:return BigNatModule_isZero(BigInteger__get_V(t));case 9:throw new Error("signs should be +/- 1 or 0\\nParameter name: x")}}export function BigInteger_op_GreaterThanOrEqual_56F059C0(e,t){const g=0|BigInteger__get_SignInt(e),_=0|BigInteger__get_SignInt(t);let r;switch(r=-1===g?-1===_?1:0===_?6:1===_?3:9:0===g?-1===_?8:0===_?4:1===_?7:9:1===g?-1===_?2:0===_?5:1===_?0:9:9,r){case 0:return BigNatModule_gte(BigInteger__get_V(e),BigInteger__get_V(t));case 1:return BigNatModule_gte(BigInteger__get_V(t),BigInteger__get_V(e));case 2:case 4:case 5:case 8:return!0;case 3:return!!BigNatModule_isZero(BigInteger__get_V(e))&&BigNatModule_isZero(BigInteger__get_V(t));case 6:return BigNatModule_isZero(BigInteger__get_V(e));case 7:return BigNatModule_isZero(BigInteger__get_V(t));case 9:throw new Error("signs should be +/- 1 or 0\\nParameter name: x")}}export function BigInteger_Pow_62E082A2(e,t){if(t<0)throw new Error("y");if(BigInteger__get_IsZero(e))return 0===t?BigInteger_get_One():BigInteger_get_Zero();{const g=BigInteger_$ctor_Z524259A4(t);return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(g),BigNatModule_two))?1:BigInteger__get_SignInt(e),BigNatModule_pow(BigInteger__get_V(e),BigInteger__get_V(g)))}}export function BigInteger__get_ToInt32(e){if(BigInteger__get_IsZero(e))return 0;{const t=BigNatModule_toUInt32(BigInteger__get_V(e));if(t<=2147483647)return BigInteger__get_SignInt(e)*~~t|0;if(-1===BigInteger__get_SignInt(e)&&2147483648===t)return-2147483648;throw new Error}}export function BigInteger__get_ToUInt32(e){return BigInteger__get_IsZero(e)?0:BigNatModule_toUInt32(BigInteger__get_V(e))}export function BigInteger__get_ToInt64(e){if(BigInteger__get_IsZero(e))return fromBits(0,0,!1);{const t=BigNatModule_toUInt64(BigInteger__get_V(e));if(compare(t,fromValue(fromBits(4294967295,2147483647,!1),!0))<=0)return op_Multiply(fromInteger(BigInteger__get_SignInt(e),!1,2),fromValue(t,!1));if(-1===BigInteger__get_SignInt(e)&&equals(t,fromValue(op_Addition(fromBits(4294967295,2147483647,!1),fromBits(1,0,!1)),!0)))return fromBits(0,2147483648,!1);throw new Error}}export function BigInteger__get_ToUInt64(e){return BigInteger__get_IsZero(e)?fromBits(0,0,!0):BigNatModule_toUInt64(BigInteger__get_V(e))}export function BigInteger__get_ToDouble(e){const t=0|BigInteger__get_SignInt(e);if(-1===t)return-BigNatModule_toFloat(BigInteger__get_V(e));if(0===t)return 0;if(1===t)return BigNatModule_toFloat(BigInteger__get_V(e));throw new Error("signs should be +/- 1 or 0\\nParameter name: x")}export function BigInteger__get_ToSByte(e){return(BigInteger__get_ToInt32(e)+128&255)-128}export function BigInteger__get_ToByte(e){return 255&BigInteger__get_ToUInt32(e)}export function BigInteger__get_ToInt16(e){return(BigInteger__get_ToInt32(e)+32768&65535)-32768}export function BigInteger__get_ToUInt16(e){return 65535&BigInteger__get_ToUInt32(e)}export function BigInteger__get_ToSingle(e){return BigInteger__get_ToDouble(e)}export function BigInteger__get_ToDecimal(e){return new Decimal(BigInteger__get_ToDouble(e))}export function BigInteger_Parse_Z721C83C5(e){if(null==e)throw new Error("text");const t=e.trim(),g=0|t.length;if(0===g)throw new Error;const _=t[0];if("+"===_){if(1===g)throw new Error;return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(t.slice(1,g-1+1)))}if("-"===_){if(1===g)throw new Error;return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(t.slice(1,g-1+1)))}return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(t))}export function BigInteger__get_IsSmall(e){return!!BigInteger__get_IsZero(e)||BigNatModule_isSmall(BigInteger__get_V(e))}export function BigInteger_Factorial_Z665282C2(e){if(BigInteger__get_IsNegative(e))throw new Error("mustBeNonNegative\\nParameter name: x");return BigInteger__get_IsPositive(e)?BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(e))):BigInteger_get_One()}export function BigInteger_op_UnaryPlus_Z665282C2(e){return e}export function BigInteger_FromInt64_Z524259C1(e){return BigInteger_$ctor_Z524259C1(e)}export function BigInteger_FromInt32_Z524259A4(e){return BigInteger_$ctor_Z524259A4(e)}