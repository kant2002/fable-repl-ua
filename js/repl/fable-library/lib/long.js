import{symbol}from"../Numeric.js";var wasm=null;try{wasm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}export function Long(t,r,i){this.low=0|t,this.high=0|r,this.unsigned=!!i}Long.prototype.GetHashCode=function(){let t=this.unsigned?1:0;return t=(t<<5)+t^this.high,t=(t<<5)+t^this.low,t},Long.prototype.Equals=function(t){return equals(this,t)},Long.prototype.CompareTo=function(t){return compare(this,t)},Long.prototype.toString=function(t){return toString(this,t)},Long.prototype.toJSON=function(){return toString(this)},Long.prototype[symbol]=function(){const t=this;return{multiply:r=>multiply(t,r),toPrecision:r=>String(t)+(0).toPrecision(r).substr(1),toExponential:r=>String(t)+(0).toExponential(r).substr(1),toFixed:r=>String(t)+(0).toFixed(r).substr(1),toHex:()=>toString(t.unsigned?t:fromBytes(toBytes(t),!0),16)}},Long.prototype.__isLong__,Object.defineProperty(Long.prototype,"__isLong__",{value:!0});export function isLong(t){return!0===(t&&t.__isLong__)}var INT_CACHE={},UINT_CACHE={};export function fromInt(t,r){var i,n,e;return r?(e=0<=(t>>>=0)&&t<256)&&(n=UINT_CACHE[t])?n:(i=fromBits(t,(0|t)<0?-1:0,!0),e&&(UINT_CACHE[t]=i),i):(e=-128<=(t|=0)&&t<128)&&(n=INT_CACHE[t])?n:(i=fromBits(t,t<0?-1:0,!1),e&&(INT_CACHE[t]=i),i)}export function fromNumber(t,r){if(isNaN(t))return r?UZERO:ZERO;if(r){if(t<0)return UZERO;if(t>=TWO_PWR_64_DBL)return MAX_UNSIGNED_VALUE}else{if(t<=-TWO_PWR_63_DBL)return MIN_VALUE;if(t+1>=TWO_PWR_63_DBL)return MAX_VALUE}return t<0?negate(fromNumber(-t,r)):fromBits(t%TWO_PWR_32_DBL|0,t/TWO_PWR_32_DBL|0,r)}export function fromBits(t,r,i){return new Long(t,r,i)}var pow_dbl=Math.pow;export function fromString(t,r,i){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return ZERO;if("number"==typeof r?(i=r,r=!1):r=!!r,(i=i||10)<2||36<i)throw RangeError("radix");var n=t.indexOf("-");if(n>0)throw Error("interior hyphen");if(0===n)return negate(fromString(t.substring(1),r,i));for(var e=fromNumber(pow_dbl(i,8)),o=ZERO,s=0;s<t.length;s+=8){var u=Math.min(8,t.length-s),g=parseInt(t.substring(s,s+u),i);o=add(u<8?multiply(o,fromNumber(pow_dbl(i,u))):o=multiply(o,e),fromNumber(g))}return o.unsigned=r,o}export function fromValue(t,r){return"number"==typeof t?fromNumber(t,r):"string"==typeof t?fromString(t,r):fromBits(t.low,t.high,"boolean"==typeof r?r:t.unsigned)}var TWO_PWR_16_DBL=65536,TWO_PWR_24_DBL=1<<24,TWO_PWR_32_DBL=TWO_PWR_16_DBL*TWO_PWR_16_DBL,TWO_PWR_64_DBL=TWO_PWR_32_DBL*TWO_PWR_32_DBL,TWO_PWR_63_DBL=TWO_PWR_64_DBL/2,TWO_PWR_24=fromInt(TWO_PWR_24_DBL);export var ZERO=fromInt(0);export var UZERO=fromInt(0,!0);export var ONE=fromInt(1);export var UONE=fromInt(1,!0);export var NEG_ONE=fromInt(-1);export var MAX_VALUE=fromBits(-1,2147483647,!1);export var MAX_UNSIGNED_VALUE=fromBits(-1,-1,!0);export var MIN_VALUE=fromBits(0,-2147483648,!1);export function toInt(t){return t.unsigned?t.low>>>0:t.low}export function toNumber(t){return t.unsigned?(t.high>>>0)*TWO_PWR_32_DBL+(t.low>>>0):t.high*TWO_PWR_32_DBL+(t.low>>>0)}export function toString(t,r){if((r=r||10)<2||36<r)throw RangeError("radix");if(isZero(t))return"0";if(isNegative(t)){if(equals(t,MIN_VALUE)){var i=fromNumber(r),n=divide(t,i),e=subtract(multiply(n,i),t);return toString(n,r)+toInt(e).toString(r)}return"-"+toString(negate(t),r)}for(var o=fromNumber(pow_dbl(r,6),t.unsigned),s=t,u="";;){var g=divide(s,o),h=(toInt(subtract(s,multiply(g,o)))>>>0).toString(r);if(isZero(s=g))return h+u;for(;h.length<6;)h="0"+h;u=""+h+u}}export function getHighBits(t){return t.high}export function getHighBitsUnsigned(t){return t.high>>>0}export function getLowBits(t){return t.low}export function getLowBitsUnsigned(t){return t.low>>>0}export function getNumBitsAbs(t){if(isNegative(t))return equals(t,MIN_VALUE)?64:getNumBitsAbs(negate(t));for(var r=0!=t.high?t.high:t.low,i=31;i>0&&0==(r&1<<i);i--);return 0!=t.high?i+33:i+1}export function isZero(t){return 0===t.high&&0===t.low}export function isNegative(t){return!t.unsigned&&t.high<0}export function isPositive(t){return t.unsigned||t.high>=0}export function isOdd(t){return 1==(1&t.low)}export function isEven(t){return 0==(1&t.low)}export function equals(t,r){return isLong(r)||(r=fromValue(r)),(t.unsigned===r.unsigned||t.high>>>31!=1||r.high>>>31!=1)&&t.high===r.high&&t.low===r.low}export function notEquals(t,r){return!equals(t,r)}export function lessThan(t,r){return compare(t,r)<0}export function lessThanOrEqual(t,r){return compare(t,r)<=0}export function greaterThan(t,r){return compare(t,r)>0}export function greaterThanOrEqual(t,r){return compare(t,r)>=0}export function compare(t,r){if(isLong(r)||(r=fromValue(r)),equals(t,r))return 0;var i=isNegative(t),n=isNegative(r);return i&&!n?-1:!i&&n?1:t.unsigned?r.high>>>0>t.high>>>0||r.high===t.high&&r.low>>>0>t.low>>>0?-1:1:isNegative(subtract(t,r))?-1:1}export function negate(t){return!t.unsigned&&equals(t,MIN_VALUE)?MIN_VALUE:add(not(t),ONE)}export function add(t,r){isLong(r)||(r=fromValue(r));var i=t.high>>>16,n=65535&t.high,e=t.low>>>16,o=65535&t.low,s=r.high>>>16,u=65535&r.high,g=r.low>>>16,h=0,f=0,a=0,l=0;return a+=(l+=o+(65535&r.low))>>>16,f+=(a+=e+g)>>>16,h+=(f+=n+u)>>>16,h+=i+s,fromBits((a&=65535)<<16|(l&=65535),(h&=65535)<<16|(f&=65535),t.unsigned)}export function subtract(t,r){return isLong(r)||(r=fromValue(r)),add(t,negate(r))}export function multiply(t,r){if(isZero(t))return t.unsigned?UZERO:ZERO;if(isLong(r)||(r=fromValue(r)),wasm)return fromBits(wasm.mul(t.low,t.high,r.low,r.high),wasm.get_high(),t.unsigned);if(isZero(r))return t.unsigned?UZERO:ZERO;if(equals(t,MIN_VALUE))return isOdd(r)?MIN_VALUE:ZERO;if(equals(r,MIN_VALUE))return isOdd(t)?MIN_VALUE:ZERO;if(isNegative(t))return isNegative(r)?multiply(negate(t),negate(r)):negate(multiply(negate(t),r));if(isNegative(r))return negate(multiply(t,negate(r)));if(lessThan(t,TWO_PWR_24)&&lessThan(r,TWO_PWR_24))return fromNumber(toNumber(t)*toNumber(r),t.unsigned);var i=t.high>>>16,n=65535&t.high,e=t.low>>>16,o=65535&t.low,s=r.high>>>16,u=65535&r.high,g=r.low>>>16,h=65535&r.low,f=0,a=0,l=0,m=0;return l+=(m+=o*h)>>>16,a+=(l+=e*h)>>>16,l&=65535,a+=(l+=o*g)>>>16,f+=(a+=n*h)>>>16,a&=65535,f+=(a+=e*g)>>>16,a&=65535,f+=(a+=o*u)>>>16,f+=i*h+n*g+e*u+o*s,fromBits((l&=65535)<<16|(m&=65535),(f&=65535)<<16|(a&=65535),t.unsigned)}export function divide(t,r){if(isLong(r)||(r=fromValue(r)),isZero(r))throw Error("division by zero");var i,n,e;if(wasm)return t.unsigned||-2147483648!==t.high||-1!==r.low||-1!==r.high?fromBits((t.unsigned?wasm.div_u:wasm.div_s)(t.low,t.high,r.low,r.high),wasm.get_high(),t.unsigned):t;if(isZero(t))return t.unsigned?UZERO:ZERO;if(t.unsigned){if(r.unsigned||(r=toUnsigned(r)),greaterThan(r,t))return UZERO;if(greaterThan(r,shiftRightUnsigned(t,1)))return UONE;e=UZERO}else{if(equals(t,MIN_VALUE))return equals(r,ONE)||equals(r,NEG_ONE)?MIN_VALUE:equals(r,MIN_VALUE)?ONE:equals(i=shiftLeft(divide(shiftRight(t,1),r),1),ZERO)?isNegative(r)?ONE:NEG_ONE:e=add(i,divide(n=subtract(t,multiply(r,i)),r));if(equals(r,MIN_VALUE))return t.unsigned?UZERO:ZERO;if(isNegative(t))return isNegative(r)?divide(negate(t),negate(r)):negate(divide(negate(t),r));if(isNegative(r))return negate(divide(t,negate(r)));e=ZERO}for(n=t;greaterThanOrEqual(n,r);){i=Math.max(1,Math.floor(toNumber(n)/toNumber(r)));for(var o=Math.ceil(Math.log(i)/Math.LN2),s=o<=48?1:pow_dbl(2,o-48),u=fromNumber(i),g=multiply(u,r);isNegative(g)||greaterThan(g,n);)g=multiply(u=fromNumber(i-=s,t.unsigned),r);isZero(u)&&(u=ONE),e=add(e,u),n=subtract(n,g)}return e}export function modulo(t,r){return isLong(r)||(r=fromValue(r)),wasm?fromBits((t.unsigned?wasm.rem_u:wasm.rem_s)(t.low,t.high,r.low,r.high),wasm.get_high(),t.unsigned):subtract(t,multiply(divide(t,r),r))}export function not(t){return fromBits(~t.low,~t.high,t.unsigned)}export function and(t,r){return isLong(r)||(r=fromValue(r)),fromBits(t.low&r.low,t.high&r.high,t.unsigned)}export function or(t,r){return isLong(r)||(r=fromValue(r)),fromBits(t.low|r.low,t.high|r.high,t.unsigned)}export function xor(t,r){return isLong(r)||(r=fromValue(r)),fromBits(t.low^r.low,t.high^r.high,t.unsigned)}export function shiftLeft(t,r){return isLong(r)&&(r=toInt(r)),0==(r&=63)?t:r<32?fromBits(t.low<<r,t.high<<r|t.low>>>32-r,t.unsigned):fromBits(0,t.low<<r-32,t.unsigned)}export function shiftRight(t,r){return isLong(r)&&(r=toInt(r)),0==(r&=63)?t:r<32?fromBits(t.low>>>r|t.high<<32-r,t.high>>r,t.unsigned):fromBits(t.high>>r-32,t.high>=0?0:-1,t.unsigned)}export function shiftRightUnsigned(t,r){if(isLong(r)&&(r=toInt(r)),0==(r&=63))return t;var i=t.high;return r<32?fromBits(t.low>>>r|i<<32-r,i>>>r,t.unsigned):fromBits(32===r?i:i>>>r-32,0,t.unsigned)}export const rotateLeft=function(t){var r;return isLong(t)&&(t=t.toInt()),0==(t&=63)?this:32===t?fromBits(this.high,this.low,this.unsigned):t<32?(r=32-t,fromBits(this.low<<t|this.high>>>r,this.high<<t|this.low>>>r,this.unsigned)):(r=32-(t-=32),fromBits(this.high<<t|this.low>>>r,this.low<<t|this.high>>>r,this.unsigned))};export const rotateRight=function(t){var r;return isLong(t)&&(t=t.toInt()),0==(t&=63)?this:32===t?fromBits(this.high,this.low,this.unsigned):t<32?(r=32-t,fromBits(this.high<<r|this.low>>>t,this.low<<r|this.high>>>t,this.unsigned)):(r=32-(t-=32),fromBits(this.low<<r|this.high>>>t,this.high<<r|this.low>>>t,this.unsigned))};export function toSigned(t){return t.unsigned?fromBits(t.low,t.high,!1):t}export function toUnsigned(t){return t.unsigned?t:fromBits(t.low,t.high,!0)}export function toBytes(t,r){return r?toBytesLE(t):toBytesBE(t)}export function toBytesLE(t){var r=t.high,i=t.low;return[255&i,i>>>8&255,i>>>16&255,i>>>24,255&r,r>>>8&255,r>>>16&255,r>>>24]}export function toBytesBE(t){var r=t.high,i=t.low;return[r>>>24,r>>>16&255,r>>>8&255,255&r,i>>>24,i>>>16&255,i>>>8&255,255&i]}export function fromBytes(t,r,i){return i?fromBytesLE(t,r):fromBytesBE(t,r)}export function fromBytesLE(t,r){return new Long(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,r)}export function fromBytesBE(t,r){return new Long(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],r)}