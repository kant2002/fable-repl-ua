import{DateTime,getTicks,dayOfYear as Date_dayOfYear,year as Date_year,month as Date_month,day as Date_day,daysInMonth as Date_daysInMonth}from"./Date.js";import{padWithZeros}from"./Util.js";import{toInt,fromNumber,op_Division as Long_op_Division,op_Multiply as Long_op_Multiply,ticksToUnixEpochMilliseconds}from"./Long.js";export function fromUnixMilliseconds(e){return DateTime(e,1)}export function create(e,t,n){const r=fromUnixMilliseconds(Date.UTC(e,t-1,n));return e<=99&&r.setUTCFullYear(e),r}export function maxValue(){return fromUnixMilliseconds(2534022144e5)}export function minValue(){return fromUnixMilliseconds(-621355968e5)}export function dayNumber(e){return toInt(Long_op_Division(getTicks(e),864e9))}export function fromDayNumber(e){const t=Long_op_Multiply(fromNumber(864e9),e);return fromUnixMilliseconds(ticksToUnixEpochMilliseconds(t))}export function fromDateTime(e){return create(Date_year(e),Date_month(e),Date_day(e))}export function day(e){return e.getUTCDate()}export function month(e){return e.getUTCMonth()+1}export function year(e){return e.getUTCFullYear()}export function dayOfWeek(e){return e.getUTCDay()}export function dayOfYear(e){return Date_dayOfYear(e)}export function toDateTime(e,t,n=0){return DateTime(e.getTime()+t+6e4*(1!==n?e.getTimezoneOffset():0),n)}export function toString(e,t="d",n){if(-1===["d","o","O"].indexOf(t))throw new Error("Custom formats are not supported");const r=padWithZeros(year(e),4),o=padWithZeros(month(e),2),i=padWithZeros(day(e),2);return"d"===t?`${o}/${i}/${r}`:`${r}-${o}-${i}`}export function parse(e){function t(){throw new Error(`String '${e}' was not recognized as a valid DateOnly.`)}const n=/^\s*(\d{1,4})(?:\s*[.,-\/]\s*(\d{1,2}))?\s*[.,-\/]\s*(\d{1,4})\s*$/.exec(e);if(null!=n){let e=0,r=0,o=1;if(null==n[2])n[1].length<3?n[3].length<3?(e=(new Date).getFullYear(),r=+n[1],o=+n[3]):(r=+n[1],e=+n[3]):(n[3].length>2&&t(),e=+n[1],r=+n[3]);else{const t=n[1].length>2,i=n[t?1:3];e=+i,i.length<3&&(e+=e>=30?1900:2e3),r=+n[t?2:1],o=+n[t?3:2]}if(e>0&&r>0&&r<13&&o>0&&o<=Date_daysInMonth(e,r))return create(e,r,o)}return t()}export function tryParse(e,t){try{return t.contents=parse(e),!0}catch(e){return!1}}