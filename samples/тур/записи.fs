module Tour.TuplesAndRecords

// Із https://docs.microsoft.com/en-us/dotnet/fsharp/tour
// Щоб дізнатися більше про кожну тему, перейдіть за посиланням вище
// Ви також можете знайти більше навчальних ресурсів за адресою https://fsharp.org/
// (лише англійською)

module Кортежі =

    /// Простий кортеж цілих.
    let кортеж1 = (1, 2, 3)

    /// Функція яка міняє порядок двох значень у кортежі.
    ///
    /// Вивід типів F# буде автоматично узагальнювати функцію щоб вона мала узагальнений тип,
    /// означачи що вона буде працювати із любим типом.
    let помінятиЕлементи (a, b) = (b, a)

    printfn "Результат заміни (1, 2) - %A" (помінятиЕлементи (1,2))

    /// Кортеж складаючийся із цілого, рядка,
    /// і числа із плаваючою точкою двойної точності.
    let кортеж2 = (1, "fred", 3.1415)

    printfn "кортеж1: %A\tкортеж2: %A" кортеж1 кортеж2


module ТипиЗаписів =

    /// Цей приклад показує як визначити новий тип запису.
    type ВізітнаКартка =
        { Ім'я        : string
          Телефон     : string
          Перевірений : bool }

    /// Цей приклад показує як створити екземпляр типу записа.
    let контакт1 =
        { Ім'я = "Богдан"
          Телефон = "(206) 555-0157"
          Перевірений = false }

    /// Ви можете також створити новий екземпляр на одному рядку із допомогою розокремлювачів ';'.
    let контактНаТомуСамомуРядку = { Ім'я = "Alf"; Телефон = "(206) 555-0157"; Перевірений = false }

    /// Цей приклад показує як використовувати "копію-із-оновленням" на значеннях записів. Він створює
    /// новий запис який є копією контакт1, але має інші значення для
    /// полів 'Телефон' та 'Перевірений'.
    ///
    /// Щоб дізнатия більше, дивиться: https://docs.microsoft.com/dotnet/fsharp/language-reference/copy-and-update-record-expressions
    let контакт2 =
        { контакт1 with
            Телефон = "(206) 555-0112"
            Перевірений = true }

    /// Цей приклад показує як писати функцію яка обробляє значення запису.
    /// Вона конвертує об'єкт 'ВізітнаКартка' до рядка.
    let показатиВізітнуКартку (c: ВізітнаКартка) =
        c.Ім'я + " Телефон: " + c.Телефон + (if not c.Перевірений then " (не перевірений)" else "")

    printfn "Візитна картка Богдана: %s" (показатиВізітнуКартку контакт1)

    /// Це приклад Запису із членом.
    type АльтернативнаВізітнаКартка =
        { Ім'я        : string
          Телефон     : string
          Адреса      : string
          Перевірений : bool }

        /// Записи можуть реалізовувати об'єктно орієнтовані члени.
        member this.НадрукованаВізітнаКартка =
            this.Ім'я + " Телефон: " + this.Телефон + (if not this.Перевірений then " (не перевірений)" else "") + this.Адреса

    let альтернативнийКонтакт =
        { Ім'я = "Богдан"
          Телефон = "(206) 555-0157"
          Перевірений = false
          Адреса = "111 вул. Богдана" }

    // Члени можуть бути доступні через оператор '.' на інстанцьйованому типі.
    printfn "Альтернативна візитна картка Богдана: %s" альтернативнийКонтакт.НадрукованаВізітнаКартка


