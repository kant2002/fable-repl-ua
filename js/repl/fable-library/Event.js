import{Observer}from"./Observable.js";import{some,value}from"./Option.js";import{Choice_tryValueIfChoice1Of2,Choice_tryValueIfChoice2Of2}from"./Choice.js";export class Event{constructor(){this.delegates=[]}Add(e){this._addHandler(e)}get Publish(){return this}Trigger(e,t){let r,n;void 0===t?(r=null,n=e):(r=e,n=t),this.delegates.forEach((e=>1===e.length?e(n):e(r,n)))}AddHandler(e){this._addHandler(e)}RemoveHandler(e){this._removeHandler(e)}Subscribe(e){const t="function"==typeof e?e:e.OnNext;return this._addHandler(t),{Dispose:()=>{this._removeHandler(t)}}}_addHandler(e){this.delegates.push(e)}_removeHandler(e){const t=this.delegates.indexOf(e);t>-1&&this.delegates.splice(t,1)}}export function add(e,t){t instanceof Event?t.Add(e):t.Subscribe(new Observer(e))}export function choose(e,t){const r=new Event;return add((t=>{const n=e(t);null!=n&&r.Trigger(value(n))}),t),r}export function filter(e,t){return choose((t=>e(t)?some(t):void 0),t)}export function map(e,t){const r=new Event;return add((t=>r.Trigger(e(t))),t),r}export function merge(e,t){const r=new Event,n=e=>r.Trigger(e);return add(n,e),add(n,t),r}export function pairwise(e){const t=new Event;let r,n=!1;return add((e=>{n&&t.Trigger([r,e]),r=e,n=!0}),e),t}export function partition(e,t){return[filter(e,t),filter((t=>!e(t)),t)]}export function scan(e,t,r){return map((r=>t=e(t,r)),r)}export function split(e,t){return[choose((t=>Choice_tryValueIfChoice1Of2(e(t))),t),choose((t=>Choice_tryValueIfChoice2Of2(e(t))),t)]}export function createEvent(e,t){return{AddHandler(t){e(t)},RemoveHandler(e){t(e)},Subscribe(r){const n=(e,t)=>r.OnNext(t);return e(n),{Dispose(){t(n)}}}}}export default Event;