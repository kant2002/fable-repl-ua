const littleEndian=!0;function utf16le_encode(e){const t=new Uint8Array(2*e.length),n=new DataView(t.buffer);for(let t=0;t<e.length;t++){const r=e.charCodeAt(t);n.setUint16(2*t,r,littleEndian)}return t}function utf16le_decode(e){const t=ArrayBuffer.isView(e)?e:Uint8Array.from(e),n=new DataView(t.buffer,t.byteOffset,t.byteLength),r=new Array(n.byteLength/2);for(let e=0;e<r.length;e++){const t=n.getUint16(2*e,littleEndian);r[e]=String.fromCharCode(t)}return r.join("")}function utf8_encode(e){let t=0,n=new Uint8Array(3*e.length);for(let r=0;r<e.length;r++){let f=e.charCodeAt(r);if(f>=55296&&f<=56319){const u=r<e.length?e.charCodeAt(r+1):0;u>=56320&&u<=57343?(r+=1,f=1024*(f-55296)+u-56320+65536,f>65535&&(n[t++]=240|f>>>18,n[t++]=128|f>>>12&63,n[t++]=128|f>>>6&63,n[t++]=128|63&f)):(n[t++]=239,n[t++]=191,n[t++]=189)}else f<=127?n[t++]=0|f:f<=2047?(n[t++]=192|f>>>6,n[t++]=128|63&f):(n[t++]=224|f>>>12,n[t++]=128|f>>>6&63,n[t++]=128|63&f)}return n=new Uint8Array(n.buffer.slice(0,t)),n}function utf8_decode(e){let t=0;const n=()=>{const n=e[t++];if(0==(128&n))return n;if(192==(224&n))return(31&n)<<6|63&e[t++];if(224==(240&n))return(15&n)<<12|(63&e[t++])<<6|63&e[t++];if(240==(248&n))return(7&n)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++];throw new RangeError("Invalid UTF8 byte: "+n)},r=new Array;for(;t<e.length;){const e=n();r.push(String.fromCodePoint(e))}return r.join("")}class UTF16LE{getBytes(e,t,n){if(e=Array.isArray(e)?e.join(""):e,null!=t&&null!=n?e=e.substring(t,t+n):null!=t&&(e=e.substring(t)),"undefined"!=typeof Buffer){const t=Buffer.from(e,"utf16le");return new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}return utf16le_encode(e)}getString(e,t,n){const r=ArrayBuffer.isView(e)?e:Uint8Array.from(e);let f=new Uint8Array(r.buffer,r.byteOffset,r.byteLength);return null!=t&&null!=n?f=f.subarray(t,t+n):null!=t&&(f=f.subarray(t)),"undefined"!=typeof TextDecoder?new TextDecoder("utf-16le").decode(f):"undefined"!=typeof Buffer?Buffer.from(f).toString("utf16le"):utf16le_decode(f)}}class UTF8{getBytes(e,t,n){if(e=Array.isArray(e)?e.join(""):e,null!=t&&null!=n?e=e.substring(t,t+n):null!=t&&(e=e.substring(t)),"undefined"!=typeof TextEncoder)return(new TextEncoder).encode(e);if("undefined"!=typeof Buffer){const t=Buffer.from(e,"utf8");return new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}return utf8_encode(e)}getString(e,t,n){const r=ArrayBuffer.isView(e)?e:Uint8Array.from(e);let f=new Uint8Array(r.buffer,r.byteOffset,r.byteLength);return null!=t&&null!=n?f=f.subarray(t,t+n):null!=t&&(f=f.subarray(t)),"undefined"!=typeof TextDecoder?(new TextDecoder).decode(f):"undefined"!=typeof Buffer?Buffer.from(f).toString("utf8"):utf8_decode(f)}}const _UTF16=new UTF16LE,_UTF8=new UTF8;export function get_Unicode(){return _UTF16}export function get_UTF8(){return _UTF8}