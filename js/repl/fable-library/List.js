import{join}from"./String.js";import{disposeSafe,isArrayLike,defaultOf,getEnumerator,toIterator,compare,structuralHash,equals}from"./Util.js";import{Record}from"./Types.js";import{class_type,record_type,option_type}from"./Reflection.js";import{SR_inputSequenceTooLong,SR_inputSequenceEmpty,SR_inputMustBeNonNegative,SR_notEnoughElements,SR_differentLengths,SR_keyNotFoundAlt,SR_indexOutOfBounds,SR_inputWasEmpty}from"./Global.js";import{defaultArg,value as value_1,some}from"./Option.js";import{transpose as transpose_1,splitInto as splitInto_1,windowed as windowed_1,pairwise as pairwise_1,chunkBySize as chunkBySize_1,map as map_1,permute as permute_1,tryFindIndexBack as tryFindIndexBack_1,tryFindBack as tryFindBack_1,scanBack as scanBack_1,foldBack2 as foldBack2_1,foldBack as foldBack_1,fill}from"./Array.js";export class FSharpList extends Record{constructor(t,r){super(),this.head=t,this.tail=r}toString(){return"["+join("; ",this)+"]"}Equals(t){return this===t||((t,r)=>{t:for(;;){const e=t,n=r,i=e.tail,o=n.tail;if(null!=i){if(null!=o){const a=i,_=o;if(equals(e.head,n.head)){t=a,r=_;continue t}return!1}return!1}return null==o}})(this,t)}GetHashCode(){return 0|((t,r,e)=>{for(;;){const n=t,i=r,o=e,a=o.tail;if(null==a)return 0|i;{const _=a;if(n>18)return 0|i;t=n+1,r=(i<<1)+structuralHash(o.head)+631*n,e=_}}})(0,0,this)}toJSON(){return Array.from(this)}CompareTo(t){return 0|((t,r)=>{t:for(;;){const e=t,n=r,i=e.tail,o=n.tail;if(null!=i){if(null!=o){const a=i,_=o,s=0|compare(e.head,n.head);if(0===s){t=a,r=_;continue t}return 0|s}return 1}return null!=o?-1:0}})(this,t)}GetEnumerator(){return ListEnumerator$1_$ctor_3002E699(this)}[Symbol.iterator](){return toIterator(this.GetEnumerator())}"System.Collections.IEnumerable.GetEnumerator"(){return getEnumerator(this)}}export function FSharpList$reflection(t){return record_type("ListModule.FSharpList",[t],FSharpList,(()=>[["head",t],["tail",option_type(FSharpList$reflection(t))]]))}export class ListEnumerator$1{constructor(t){this.xs=t,this.it=this.xs,this.current=defaultOf()}"System.Collections.Generic.IEnumerator`1.get_Current"(){return this.current}"System.Collections.IEnumerator.get_Current"(){return this.current}"System.Collections.IEnumerator.MoveNext"(){const t=this,r=t.it.tail;if(null!=r){const e=r;return t.current=t.it.head,t.it=e,!0}return!1}"System.Collections.IEnumerator.Reset"(){const t=this;t.it=t.xs,t.current=defaultOf()}Dispose(){}}export function ListEnumerator$1$reflection(t){return class_type("ListModule.ListEnumerator`1",[t],ListEnumerator$1)}export function ListEnumerator$1_$ctor_3002E699(t){return new ListEnumerator$1(t)}export function FSharpList_get_Empty(){return new FSharpList(defaultOf(),void 0)}export function FSharpList_Cons_305B8EAC(t,r){return new FSharpList(t,r)}export function FSharpList__get_IsEmpty(t){return null==t.tail}export function FSharpList__get_Length(t){return 0|((t,r)=>{for(;;){const e=t,n=r.tail;if(null==n)return 0|e;t=e+1,r=n}})(0,t)}export function FSharpList__get_Head(t){if(null!=t.tail)return t.head;throw new Error(SR_inputWasEmpty+"\\nParameter name: list")}export function FSharpList__get_Tail(t){const r=t.tail;if(null!=r)return r;throw new Error(SR_inputWasEmpty+"\\nParameter name: list")}export function FSharpList__get_Item_Z524259A4(t,r){return((t,e)=>{for(;;){const n=t,i=e,o=i.tail;if(null==o)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");if(n===r)return i.head;t=n+1,e=o}})(0,t)}export function indexNotFound(){throw new Error(SR_keyNotFoundAlt)}export function empty(){return FSharpList_get_Empty()}export function cons(t,r){return FSharpList_Cons_305B8EAC(t,r)}export function singleton(t){return FSharpList_Cons_305B8EAC(t,FSharpList_get_Empty())}export function isEmpty(t){return FSharpList__get_IsEmpty(t)}export function length(t){return FSharpList__get_Length(t)}export function head(t){return FSharpList__get_Head(t)}export function tryHead(t){return FSharpList__get_IsEmpty(t)?void 0:some(FSharpList__get_Head(t))}export function tail(t){return FSharpList__get_Tail(t)}export function tryLast(t){t:for(;;){const r=t;if(FSharpList__get_IsEmpty(r))return;{const e=FSharpList__get_Tail(r);if(FSharpList__get_IsEmpty(e))return some(FSharpList__get_Head(r));t=e;continue t}}}export function last(t){const r=tryLast(t);if(null==r)throw new Error(SR_inputWasEmpty);return value_1(r)}export function compareWith(t,r,e){return 0|((r,e)=>{t:for(;;){const n=r,i=e,o=FSharpList__get_IsEmpty(n),a=FSharpList__get_IsEmpty(i);if(o)return a?0:-1;if(a)return 1;{const o=0|t(FSharpList__get_Head(n),FSharpList__get_Head(i));if(0===o){r=FSharpList__get_Tail(n),e=FSharpList__get_Tail(i);continue t}return 0|o}}})(r,e)}export function toArray(t){const r=0|FSharpList__get_Length(t),e=fill(new Array(r),0,r,null);return((t,r)=>{for(;;){const n=t,i=r;if(FSharpList__get_IsEmpty(i))break;e[n]=FSharpList__get_Head(i),t=n+1,r=FSharpList__get_Tail(i)}})(0,t),e}export function fold(t,r,e){let n=r,i=e;for(;!FSharpList__get_IsEmpty(i);)n=t(n,head(i)),i=FSharpList__get_Tail(i);return n}export function reverse(t){return fold(((t,r)=>FSharpList_Cons_305B8EAC(r,t)),FSharpList_get_Empty(),t)}export function foldBack(t,r,e){return foldBack_1(t,toArray(r),e)}export function foldIndexed(t,r,e){return((r,e,n)=>{for(;;){const i=r,o=e,a=n;if(FSharpList__get_IsEmpty(a))return o;r=i+1,e=t(i,o,FSharpList__get_Head(a)),n=FSharpList__get_Tail(a)}})(0,r,e)}export function fold2(t,r,e,n){let i=r,o=e,a=n;for(;!FSharpList__get_IsEmpty(o)&&!FSharpList__get_IsEmpty(a);)i=t(i,FSharpList__get_Head(o),FSharpList__get_Head(a)),o=FSharpList__get_Tail(o),a=FSharpList__get_Tail(a);return i}export function foldBack2(t,r,e,n){return foldBack2_1(t,toArray(r),toArray(e),n)}export function unfold(t,r){const e=FSharpList_get_Empty(),n=((r,e)=>{let n;for(;;){const i=e,o=t(r);if(null==o)return i;r=o[1],n=new FSharpList(o[0],void 0),i.tail=n,e=n}})(r,e),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function iterate(t,r){fold(((r,e)=>{t(e)}),void 0,r)}export function iterate2(t,r,e){fold2(((r,e,n)=>{t(e,n)}),void 0,r,e)}export function iterateIndexed(t,r){fold(((r,e)=>(t(r,e),r+1|0)),0,r)}export function iterateIndexed2(t,r,e){fold2(((r,e,n)=>(t(r,e,n),r+1|0)),0,r,e)}export function toSeq(t){return t}export function ofArrayWithTail(t,r){let e=r;for(let r=t.length-1;r>=0;r--)e=FSharpList_Cons_305B8EAC(t[r],e);return e}export function ofArray(t){return ofArrayWithTail(t,FSharpList_get_Empty())}export function ofSeq(t){let r,e;if(isArrayLike(t))return ofArray(t);if(t instanceof FSharpList)return t;{const n=FSharpList_get_Empty();let i=n;const o=getEnumerator(t);try{for(;o["System.Collections.IEnumerator.MoveNext"]();){const t=o["System.Collections.Generic.IEnumerator`1.get_Current"]();r=i,e=new FSharpList(t,void 0),r.tail=e,i=e}}finally{disposeSafe(o)}const a=i,_=FSharpList_get_Empty();return a.tail=_,FSharpList__get_Tail(n)}}export function concat(t){const r=FSharpList_get_Empty();let e=r;const n=t=>{e=fold(((t,r)=>{const e=new FSharpList(r,void 0);return t.tail=e,e}),e,t)};if(isArrayLike(t))t.forEach(n);else if(t instanceof FSharpList)iterate(n,t);else{const r=getEnumerator(t);try{for(;r["System.Collections.IEnumerator.MoveNext"]();)n(r["System.Collections.Generic.IEnumerator`1.get_Current"]())}finally{disposeSafe(r)}}const i=e,o=FSharpList_get_Empty();return i.tail=o,FSharpList__get_Tail(r)}export function scan(t,r,e){let n,i;const o=FSharpList_get_Empty();let a;const _=new FSharpList(r,void 0);o.tail=_,a=_;let s=r,p=e;for(;!FSharpList__get_IsEmpty(p);)s=t(s,FSharpList__get_Head(p)),n=a,i=new FSharpList(s,void 0),n.tail=i,a=i,p=FSharpList__get_Tail(p);const u=a,l=FSharpList_get_Empty();return u.tail=l,FSharpList__get_Tail(o)}export function scanBack(t,r,e){return ofArray(scanBack_1(t,toArray(r),e,null))}export function append(t,r){return fold(((t,r)=>FSharpList_Cons_305B8EAC(r,t)),r,reverse(t))}export function collect(t,r){let e,n;const i=FSharpList_get_Empty();let o=i,a=r;for(;!FSharpList__get_IsEmpty(a);){let r=t(FSharpList__get_Head(a));for(;!FSharpList__get_IsEmpty(r);)e=o,n=new FSharpList(FSharpList__get_Head(r),void 0),e.tail=n,o=n,r=FSharpList__get_Tail(r);a=FSharpList__get_Tail(a)}const _=o,s=FSharpList_get_Empty();return _.tail=s,FSharpList__get_Tail(i)}export function mapIndexed(t,r){const e=FSharpList_get_Empty(),n=foldIndexed(((r,e,n)=>{const i=new FSharpList(t(r,n),void 0);return e.tail=i,i}),e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function map(t,r){const e=FSharpList_get_Empty(),n=fold(((r,e)=>{const n=new FSharpList(t(e),void 0);return r.tail=n,n}),e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function indexed(t){return mapIndexed(((t,r)=>[t,r]),t)}export function map2(t,r,e){const n=FSharpList_get_Empty(),i=fold2(((r,e,n)=>{const i=new FSharpList(t(e,n),void 0);return r.tail=i,i}),n,r,e),o=FSharpList_get_Empty();return i.tail=o,FSharpList__get_Tail(n)}export function mapIndexed2(t,r,e){const n=FSharpList_get_Empty(),i=((r,e,n,i)=>{let o;for(;;){const a=r,_=e,s=n,p=i;if(FSharpList__get_IsEmpty(s)||FSharpList__get_IsEmpty(p))return _;r=a+1,o=new FSharpList(t(a,FSharpList__get_Head(s),FSharpList__get_Head(p)),void 0),_.tail=o,e=o,n=FSharpList__get_Tail(s),i=FSharpList__get_Tail(p)}})(0,n,r,e),o=FSharpList_get_Empty();return i.tail=o,FSharpList__get_Tail(n)}export function map3(t,r,e,n){const i=FSharpList_get_Empty(),o=((r,e,n,i)=>{let o;for(;;){const a=r,_=e,s=n,p=i;if(FSharpList__get_IsEmpty(_)||FSharpList__get_IsEmpty(s)||FSharpList__get_IsEmpty(p))return a;o=new FSharpList(t(FSharpList__get_Head(_),FSharpList__get_Head(s),FSharpList__get_Head(p)),void 0),a.tail=o,r=o,e=FSharpList__get_Tail(_),n=FSharpList__get_Tail(s),i=FSharpList__get_Tail(p)}})(i,r,e,n),a=FSharpList_get_Empty();return o.tail=a,FSharpList__get_Tail(i)}export function mapFold(t,r,e){const n=FSharpList_get_Empty(),i=fold(((r,e)=>{let n;const i=t(r[1],e);return[(n=new FSharpList(i[0],void 0),r[0].tail=n,n),i[1]]}),[n,r],e),o=FSharpList_get_Empty();return i[0].tail=o,[FSharpList__get_Tail(n),i[1]]}export function mapFoldBack(t,r,e){return mapFold(((r,e)=>t(e,r)),e,reverse(r))}export function tryPick(t,r){return(r=>{t:for(;;){const e=r;if(FSharpList__get_IsEmpty(e))return;{const n=t(FSharpList__get_Head(e));if(null==n){r=FSharpList__get_Tail(e);continue t}return n}}})(r)}export function pick(t,r){const e=tryPick(t,r);return null==e?indexNotFound():value_1(e)}export function tryFind(t,r){return tryPick((r=>t(r)?some(r):void 0),r)}export function find(t,r){const e=tryFind(t,r);return null==e?indexNotFound():value_1(e)}export function tryFindBack(t,r){return tryFindBack_1(t,toArray(r))}export function findBack(t,r){const e=tryFindBack(t,r);return null==e?indexNotFound():value_1(e)}export function tryFindIndex(t,r){return((r,e)=>{for(;;){const n=r,i=e;if(FSharpList__get_IsEmpty(i))return;if(t(FSharpList__get_Head(i)))return n;r=n+1,e=FSharpList__get_Tail(i)}})(0,r)}export function findIndex(t,r){const e=tryFindIndex(t,r);return null==e?(indexNotFound(),-1):0|e}export function tryFindIndexBack(t,r){return tryFindIndexBack_1(t,toArray(r))}export function findIndexBack(t,r){const e=tryFindIndexBack(t,r);return null==e?(indexNotFound(),-1):0|e}export function tryItem(t,r){return((r,e)=>{for(;;){const n=r,i=e;if(FSharpList__get_IsEmpty(i))return;if(n===t)return some(FSharpList__get_Head(i));r=n+1,e=FSharpList__get_Tail(i)}})(0,r)}export function item(t,r){return FSharpList__get_Item_Z524259A4(r,t)}export function filter(t,r){const e=FSharpList_get_Empty(),n=fold(((r,e)=>{if(t(e)){const t=new FSharpList(e,void 0);return r.tail=t,t}return r}),e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function partition(t,r){const e=FSharpList_get_Empty(),n=FSharpList_get_Empty(),i=e,o=fold(((r,e)=>{let n,i;const o=r[0],a=r[1];return t(e)?[(n=new FSharpList(e,void 0),o.tail=n,n),a]:[o,(i=new FSharpList(e,void 0),a.tail=i,i)]}),[i,n],r),a=FSharpList_get_Empty();o[0].tail=a;const _=FSharpList_get_Empty();return o[1].tail=_,[FSharpList__get_Tail(i),FSharpList__get_Tail(n)]}export function choose(t,r){const e=FSharpList_get_Empty(),n=fold(((r,e)=>{const n=t(e);if(null==n)return r;{const t=new FSharpList(value_1(n),void 0);return r.tail=t,t}}),e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function contains(t,r,e){return null!=tryFindIndex((r=>e.Equals(t,r)),r)}export function initialize(t,r){let e,n;const i=FSharpList_get_Empty();let o=i;for(let i=0;i<=t-1;i++)e=o,n=new FSharpList(r(i),void 0),e.tail=n,o=n;const a=o,_=FSharpList_get_Empty();return a.tail=_,FSharpList__get_Tail(i)}export function replicate(t,r){return initialize(t,(t=>r))}export function reduce(t,r){if(FSharpList__get_IsEmpty(r))throw new Error(SR_inputWasEmpty);return fold(t,head(r),tail(r))}export function reduceBack(t,r){if(FSharpList__get_IsEmpty(r))throw new Error(SR_inputWasEmpty);return foldBack(t,tail(r),head(r))}export function forAll(t,r){return fold(((r,e)=>r&&t(e)),!0,r)}export function forAll2(t,r,e){return fold2(((r,e,n)=>r&&t(e,n)),!0,r,e)}export function exists(t,r){return null!=tryFindIndex(t,r)}export function exists2(t,r,e){t:for(;;){const n=t,i=r,o=e,a=FSharpList__get_IsEmpty(i),_=FSharpList__get_IsEmpty(o);let s;switch(s=a?_?0:2:_?2:1,s){case 0:return!1;case 1:if(n(FSharpList__get_Head(i),FSharpList__get_Head(o)))return!0;t=n,r=FSharpList__get_Tail(i),e=FSharpList__get_Tail(o);continue t;case 2:throw new Error(SR_differentLengths+"\\nParameter name: list2")}break}}export function unzip(t){return foldBack(((t,r)=>[FSharpList_Cons_305B8EAC(t[0],r[0]),FSharpList_Cons_305B8EAC(t[1],r[1])]),t,[FSharpList_get_Empty(),FSharpList_get_Empty()])}export function unzip3(t){return foldBack(((t,r)=>[FSharpList_Cons_305B8EAC(t[0],r[0]),FSharpList_Cons_305B8EAC(t[1],r[1]),FSharpList_Cons_305B8EAC(t[2],r[2])]),t,[FSharpList_get_Empty(),FSharpList_get_Empty(),FSharpList_get_Empty()])}export function zip(t,r){return map2(((t,r)=>[t,r]),t,r)}export function zip3(t,r,e){return map3(((t,r,e)=>[t,r,e]),t,r,e)}export function sortWith(t,r){const e=toArray(r);return e.sort(t),ofArray(e)}export function sort(t,r){return sortWith(((t,e)=>r.Compare(t,e)),t)}export function sortBy(t,r,e){return sortWith(((r,n)=>e.Compare(t(r),t(n))),r)}export function sortDescending(t,r){return sortWith(((t,e)=>-1*r.Compare(t,e)),t)}export function sortByDescending(t,r,e){return sortWith(((r,n)=>-1*e.Compare(t(r),t(n))),r)}export function sum(t,r){return fold(((t,e)=>r.Add(t,e)),r.GetZero(),t)}export function sumBy(t,r,e){return fold(((r,n)=>e.Add(r,t(n))),e.GetZero(),r)}export function maxBy(t,r,e){return reduce(((r,n)=>e.Compare(t(n),t(r))>0?n:r),r)}export function max(t,r){return reduce(((t,e)=>r.Compare(e,t)>0?e:t),t)}export function minBy(t,r,e){return reduce(((r,n)=>e.Compare(t(n),t(r))>0?r:n),r)}export function min(t,r){return reduce(((t,e)=>r.Compare(e,t)>0?t:e),t)}export function average(t,r){let e=0;const n=fold(((t,n)=>(e=e+1|0,r.Add(t,n))),r.GetZero(),t);return r.DivideByInt(n,e)}export function averageBy(t,r,e){let n=0;const i=fold(((r,i)=>(n=n+1|0,e.Add(r,t(i)))),e.GetZero(),r);return e.DivideByInt(i,n)}export function permute(t,r){return ofArray(permute_1(t,toArray(r)))}export function chunkBySize(t,r){return ofArray(map_1(ofArray,chunkBySize_1(t,toArray(r)),null))}export function allPairs(t,r){const e=FSharpList_get_Empty();let n=e;iterate((t=>{iterate((r=>{let e,i;e=n,i=new FSharpList([t,r],void 0),e.tail=i,n=i}),r)}),t);const i=n,o=FSharpList_get_Empty();return i.tail=o,FSharpList__get_Tail(e)}export function skip(t,r){for(;;){const e=t,n=r;if(e<=0)return n;if(FSharpList__get_IsEmpty(n))throw new Error(SR_notEnoughElements+"\\nParameter name: list");t=e-1,r=FSharpList__get_Tail(n)}}export function skipWhile(t,r){for(;;){const e=t,n=r;if(FSharpList__get_IsEmpty(n))return n;if(!e(FSharpList__get_Head(n)))return n;t=e,r=FSharpList__get_Tail(n)}}export function take(t,r){if(t<0)throw new Error(SR_inputMustBeNonNegative+"\\nParameter name: count");const e=FSharpList_get_Empty(),n=((t,r,e)=>{let n;for(;;){const i=t,o=r,a=e;if(i<=0)return o;if(FSharpList__get_IsEmpty(a))throw new Error(SR_notEnoughElements+"\\nParameter name: list");t=i-1,n=new FSharpList(FSharpList__get_Head(a),void 0),o.tail=n,r=n,e=FSharpList__get_Tail(a)}})(t,e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function takeWhile(t,r){const e=FSharpList_get_Empty(),n=((r,e)=>{let n;for(;;){const i=r,o=e;if(FSharpList__get_IsEmpty(o))return i;if(!t(FSharpList__get_Head(o)))return i;n=new FSharpList(FSharpList__get_Head(o),void 0),i.tail=n,r=n,e=FSharpList__get_Tail(o)}})(e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function truncate(t,r){const e=FSharpList_get_Empty(),n=((t,r,e)=>{let n;for(;;){const i=t,o=r,a=e;if(i<=0)return o;if(FSharpList__get_IsEmpty(a))return o;t=i-1,n=new FSharpList(FSharpList__get_Head(a),void 0),o.tail=n,r=n,e=FSharpList__get_Tail(a)}})(t,e,r),i=FSharpList_get_Empty();return n.tail=i,FSharpList__get_Tail(e)}export function getSlice(t,r,e){const n=0|length(e);let i;const o=0|defaultArg(t,0);let a;i=o<0?0:o;const _=0|defaultArg(r,n-1);return a=_>=n?n-1:_,a<i?FSharpList_get_Empty():take(a-i+1|0,skip(i,e))}export function splitAt(t,r){if(t<0)throw new Error(SR_inputMustBeNonNegative+"\\nParameter name: index");if(t>FSharpList__get_Length(r))throw new Error(SR_notEnoughElements+"\\nParameter name: index");return[take(t,r),skip(t,r)]}export function exactlyOne(t){if(FSharpList__get_IsEmpty(t))throw new Error(SR_inputSequenceEmpty+"\\nParameter name: list");if(FSharpList__get_IsEmpty(FSharpList__get_Tail(t)))return FSharpList__get_Head(t);throw new Error(SR_inputSequenceTooLong+"\\nParameter name: list")}export function tryExactlyOne(t){return!FSharpList__get_IsEmpty(t)&&FSharpList__get_IsEmpty(FSharpList__get_Tail(t))?some(FSharpList__get_Head(t)):void 0}export function where(t,r){return filter(t,r)}export function pairwise(t){return ofArray(pairwise_1(toArray(t)))}export function windowed(t,r){return ofArray(map_1(ofArray,windowed_1(t,toArray(r)),null))}export function splitInto(t,r){return ofArray(map_1(ofArray,splitInto_1(t,toArray(r)),null))}export function transpose(t){return ofArray(map_1(ofArray,transpose_1(map_1(toArray,Array.from(t),null),null),null))}export function insertAt(t,r,e){let n=-1,i=!1;const o=fold(((e,o)=>(n=n+1|0,n===t?(i=!0,FSharpList_Cons_305B8EAC(o,FSharpList_Cons_305B8EAC(r,e))):FSharpList_Cons_305B8EAC(o,e))),FSharpList_get_Empty(),e);return reverse(i?o:n+1===t?FSharpList_Cons_305B8EAC(r,o):(()=>{throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")})())}export function insertManyAt(t,r,e){let n=-1,i=!1;const o=ofSeq(r),a=fold(((r,e)=>(n=n+1|0,n===t?(i=!0,FSharpList_Cons_305B8EAC(e,append(o,r))):FSharpList_Cons_305B8EAC(e,r))),FSharpList_get_Empty(),e);return reverse(i?a:n+1===t?append(o,a):(()=>{throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")})())}export function removeAt(t,r){let e=-1,n=!1;const i=filter((r=>(e=e+1|0,e!==t||(n=!0,!1))),r);if(!n)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return i}export function removeManyAt(t,r,e){let n=-1,i=-1;const o=filter((e=>(n=n+1|0,n===t?(i=0,!1):!(n>t&&(n<t+r||(i=1,0))))),e),a=0|(0===i&&n+1===t+r?1:i);if(a<1)throw new Error(SR_indexOutOfBounds+"\\nParameter name: "+(a<0?"index":"count"));return o}export function updateAt(t,r,e){let n=!1;const i=mapIndexed(((e,i)=>e===t?(n=!0,r):i),e);if(!n)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return i}