import{clear,defaultOf,equals,isDisposable,isArrayLike,toIterator,disposeSafe,getEnumerator}from"./Util.js";import{toString}from"./Types.js";import{class_type}from"./Reflection.js";import{some,value as value_1}from"./Option.js";import{Operators_Lock,Operators_NullArg}from"./FSharp.Core.js";import{chunkBySize as chunkBySize_1,permute as permute_1,transpose as transpose_1,map as map_1,windowed as windowed_1,splitInto as splitInto_1,pairwise as pairwise_1,scanBack as scanBack_1,reverse as reverse_1,mapFoldBack as mapFoldBack_1,mapFold as mapFold_1,tryItem as tryItem_1,tryHead as tryHead_1,foldBack2 as foldBack2_1,foldBack as foldBack_1,tryFindIndexBack as tryFindIndexBack_1,tryFindBack as tryFindBack_1,singleton as singleton_1}from"./Array.js";import{length as length_1,tryItem as tryItem_2,isEmpty as isEmpty_1,tryHead as tryHead_2,ofSeq as ofSeq_1,ofArray as ofArray_1,toArray as toArray_1,FSharpList}from"./List.js";import{SR_indexOutOfBounds}from"./Global.js";export const SR_enumerationAlreadyFinished="Enumeration already finished.";export const SR_enumerationNotStarted="Enumeration has not started. Call MoveNext.";export const SR_inputSequenceEmpty="The input sequence was empty.";export const SR_inputSequenceTooLong="The input sequence contains more than one element.";export const SR_keyNotFoundAlt="An index satisfying the predicate was not found in the collection.";export const SR_notEnoughElements="The input sequence has an insufficient number of elements.";export const SR_resetNotSupported="Reset is not supported on this enumerator.";export function Enumerator_noReset(){throw new Error(SR_resetNotSupported)}export function Enumerator_notStarted(){throw new Error(SR_enumerationNotStarted)}export function Enumerator_alreadyFinished(){throw new Error(SR_enumerationAlreadyFinished)}export class Enumerator_Seq{constructor(e){this.f=e}toString(){let e=0,t="seq [";const r=getEnumerator(this);try{for(;e<4&&r["System.Collections.IEnumerator.MoveNext"]();)e>0&&(t+="; "),t+=toString(r["System.Collections.Generic.IEnumerator`1.get_Current"]()),e=e+1|0;return 4===e&&(t+="; ..."),t+"]"}finally{disposeSafe(r)}}GetEnumerator(){return this.f()}[Symbol.iterator](){return toIterator(this.GetEnumerator())}"System.Collections.IEnumerable.GetEnumerator"(){return this.f()}}export function Enumerator_Seq$reflection(e){return class_type("SeqModule.Enumerator.Seq",[e],Enumerator_Seq)}export function Enumerator_Seq_$ctor_673A07F2(e){return new Enumerator_Seq(e)}export class Enumerator_FromFunctions$1{constructor(e,t,r){this.current=e,this.next=t,this.dispose=r}"System.Collections.Generic.IEnumerator`1.get_Current"(){return this.current()}"System.Collections.IEnumerator.get_Current"(){return this.current()}"System.Collections.IEnumerator.MoveNext"(){return this.next()}"System.Collections.IEnumerator.Reset"(){Enumerator_noReset()}Dispose(){this.dispose()}}export function Enumerator_FromFunctions$1$reflection(e){return class_type("SeqModule.Enumerator.FromFunctions`1",[e],Enumerator_FromFunctions$1)}export function Enumerator_FromFunctions$1_$ctor_58C54629(e,t,r){return new Enumerator_FromFunctions$1(e,t,r)}export function Enumerator_cast(e){return Enumerator_FromFunctions$1_$ctor_58C54629((()=>e["System.Collections.Generic.IEnumerator`1.get_Current"]()),(()=>e["System.Collections.IEnumerator.MoveNext"]()),(()=>{disposeSafe(e)}))}export function Enumerator_concat(e){let t,r,n,o=!1,i=!1;const u=()=>{if(i=!0,null!=r){const e=r;try{disposeSafe(e)}finally{r=void 0}}if(null!=t){const e=t;try{disposeSafe(e)}finally{t=void 0}}};return Enumerator_FromFunctions$1_$ctor_58C54629((()=>(o?i&&Enumerator_alreadyFinished():Enumerator_notStarted(),null!=n?value_1(n):Enumerator_alreadyFinished())),(()=>{let s;if(o||(o=!0),i)return!1;{let o;for(;null==o;){const i=t;if(null!=i)if(null!=r){const e=r;if(e["System.Collections.IEnumerator.MoveNext"]())n=some(e["System.Collections.Generic.IEnumerator`1.get_Current"]()),o=!0;else try{disposeSafe(e)}finally{r=void 0}}else{const e=i;e["System.Collections.IEnumerator.MoveNext"]()?(s=e["System.Collections.Generic.IEnumerator`1.get_Current"](),r=getEnumerator(s)):(u(),o=!1)}else t=getEnumerator(e)}return value_1(o)}}),(()=>{i||u()}))}export function Enumerator_enumerateThenFinally(e,t){return Enumerator_FromFunctions$1_$ctor_58C54629((()=>t["System.Collections.Generic.IEnumerator`1.get_Current"]()),(()=>t["System.Collections.IEnumerator.MoveNext"]()),(()=>{try{disposeSafe(t)}finally{e()}}))}export function Enumerator_generateWhileSome(e,t,r){let n,o=!1,i=some(e());const u=()=>{if(null!=i){const e=value_1(i);try{r(e)}finally{i=void 0}}},s=()=>{try{u()}finally{n=void 0}};return Enumerator_FromFunctions$1_$ctor_58C54629((()=>(o||Enumerator_notStarted(),null!=n?value_1(n):Enumerator_alreadyFinished())),(()=>{if(o||(o=!0),null!=i){const e=value_1(i);let r;try{r=t(e)}catch(e){throw s(),e}return null!=r?(n=r,!0):(s(),!1)}return!1}),u)}export function Enumerator_unfold(e,t){let r,n=t;return Enumerator_FromFunctions$1_$ctor_58C54629((()=>{if(null!=r){const e=r[0];return r[1],e}return Enumerator_notStarted()}),(()=>{if(r=e(n),null!=r){r[0];const e=r[1];return n=e,!0}return!1}),(()=>{}))}export function indexNotFound(){throw new Error(SR_keyNotFoundAlt)}export function checkNonNull(e,t){null==t&&Operators_NullArg(e)}export function mkSeq(e){return Enumerator_Seq_$ctor_673A07F2(e)}export function ofSeq(e){return checkNonNull("source",e),getEnumerator(e)}export function delay(e){return mkSeq((()=>getEnumerator(e())))}export function concat(e){return mkSeq((()=>Enumerator_concat(e)))}export function unfold(e,t){return mkSeq((()=>Enumerator_unfold(e,t)))}export function empty(){return delay((()=>new Array(0)))}export function singleton(e){return delay((()=>singleton_1(e,null)))}export function ofArray(e){return e}export function toArray(e){return e instanceof FSharpList?toArray_1(e):Array.from(e)}export function ofList(e){return e}export function toList(e){return isArrayLike(e)?ofArray_1(e):e instanceof FSharpList?e:ofSeq_1(e)}export function generate(e,t,r){return mkSeq((()=>Enumerator_generateWhileSome(e,t,r)))}export function generateIndexed(e,t,r){return mkSeq((()=>{let n=-1;return Enumerator_generateWhileSome(e,(e=>(n=n+1|0,t(n,e))),r)}))}export function append(e,t){return concat([e,t])}export function cast(e){return mkSeq((()=>(checkNonNull("source",e),Enumerator_cast(getEnumerator(e)))))}export function choose(e,t){return generate((()=>ofSeq(t)),(t=>{let r;for(;null==r&&t["System.Collections.IEnumerator.MoveNext"]();)r=e(t["System.Collections.Generic.IEnumerator`1.get_Current"]());return r}),(e=>{disposeSafe(e)}))}export function compareWith(e,t,r){const n=ofSeq(t);try{const t=ofSeq(r);try{let r=0,o=n["System.Collections.IEnumerator.MoveNext"](),i=t["System.Collections.IEnumerator.MoveNext"]();for(;0===r&&o&&i;)r=0|e(n["System.Collections.Generic.IEnumerator`1.get_Current"](),t["System.Collections.Generic.IEnumerator`1.get_Current"]()),0===r&&(o=n["System.Collections.IEnumerator.MoveNext"](),i=t["System.Collections.IEnumerator.MoveNext"]());return 0|(0!==r?r:o?1:i?-1:0)}finally{disposeSafe(t)}}finally{disposeSafe(n)}}export function contains(e,t,r){const n=ofSeq(t);try{let t=!1;for(;!t&&n["System.Collections.IEnumerator.MoveNext"]();)t=r.Equals(e,n["System.Collections.Generic.IEnumerator`1.get_Current"]());return t}finally{disposeSafe(n)}}export function enumerateFromFunctions(e,t,r){return generate(e,(e=>t(e)?some(r(e)):void 0),(e=>{const t=e;isDisposable(t)&&disposeSafe(t)}))}export function enumerateThenFinally(e,t){const r=t;return mkSeq((()=>{try{return Enumerator_enumerateThenFinally(r,ofSeq(e))}catch(e){throw r(),e}}))}export function enumerateUsing(e,t){const r=()=>{equals(e,defaultOf())||disposeSafe(e)};return mkSeq((()=>{try{return Enumerator_enumerateThenFinally(r,ofSeq(t(e)))}catch(e){throw r(),e}}))}export function enumerateWhile(e,t){return concat(unfold((r=>e()?[t,r+1]:void 0),0))}export function filter(e,t){return choose((t=>e(t)?some(t):void 0),t)}export function exists(e,t){const r=ofSeq(t);try{let t=!1;for(;!t&&r["System.Collections.IEnumerator.MoveNext"]();)t=e(r["System.Collections.Generic.IEnumerator`1.get_Current"]());return t}finally{disposeSafe(r)}}export function exists2(e,t,r){const n=ofSeq(t);try{const t=ofSeq(r);try{let r=!1;for(;!r&&n["System.Collections.IEnumerator.MoveNext"]()&&t["System.Collections.IEnumerator.MoveNext"]();)r=e(n["System.Collections.Generic.IEnumerator`1.get_Current"](),t["System.Collections.Generic.IEnumerator`1.get_Current"]());return r}finally{disposeSafe(t)}}finally{disposeSafe(n)}}export function exactlyOne(e){const t=ofSeq(e);try{if(t["System.Collections.IEnumerator.MoveNext"]()){const e=t["System.Collections.Generic.IEnumerator`1.get_Current"]();if(t["System.Collections.IEnumerator.MoveNext"]())throw new Error(SR_inputSequenceTooLong+"\\nParameter name: source");return e}throw new Error(SR_inputSequenceEmpty+"\\nParameter name: source")}finally{disposeSafe(t)}}export function tryExactlyOne(e){const t=ofSeq(e);try{if(t["System.Collections.IEnumerator.MoveNext"]()){const e=t["System.Collections.Generic.IEnumerator`1.get_Current"]();return t["System.Collections.IEnumerator.MoveNext"]()?void 0:some(e)}return}finally{disposeSafe(t)}}export function tryFind(e,t){const r=ofSeq(t);try{let t;for(;null==t&&r["System.Collections.IEnumerator.MoveNext"]();){const n=r["System.Collections.Generic.IEnumerator`1.get_Current"]();e(n)&&(t=some(n))}return t}finally{disposeSafe(r)}}export function find(e,t){const r=tryFind(e,t);return null==r?indexNotFound():value_1(r)}export function tryFindBack(e,t){return tryFindBack_1(e,toArray(t))}export function findBack(e,t){const r=tryFindBack(e,t);return null==r?indexNotFound():value_1(r)}export function tryFindIndex(e,t){const r=ofSeq(t);try{return(t=>{for(;;){const n=t;if(!r["System.Collections.IEnumerator.MoveNext"]())return;if(e(r["System.Collections.Generic.IEnumerator`1.get_Current"]()))return n;t=n+1}})(0)}finally{disposeSafe(r)}}export function findIndex(e,t){const r=tryFindIndex(e,t);return null==r?(indexNotFound(),-1):0|r}export function tryFindIndexBack(e,t){return tryFindIndexBack_1(e,toArray(t))}export function findIndexBack(e,t){const r=tryFindIndexBack(e,t);return null==r?(indexNotFound(),-1):0|r}export function fold(e,t,r){const n=ofSeq(r);try{let r=t;for(;n["System.Collections.IEnumerator.MoveNext"]();)r=e(r,n["System.Collections.Generic.IEnumerator`1.get_Current"]());return r}finally{disposeSafe(n)}}export function foldBack(e,t,r){return foldBack_1(e,toArray(t),r)}export function fold2(e,t,r,n){const o=ofSeq(r);try{const r=ofSeq(n);try{let n=t;for(;o["System.Collections.IEnumerator.MoveNext"]()&&r["System.Collections.IEnumerator.MoveNext"]();)n=e(n,o["System.Collections.Generic.IEnumerator`1.get_Current"](),r["System.Collections.Generic.IEnumerator`1.get_Current"]());return n}finally{disposeSafe(r)}}finally{disposeSafe(o)}}export function foldBack2(e,t,r,n){return foldBack2_1(e,toArray(t),toArray(r),n)}export function forAll(e,t){return!exists((t=>!e(t)),t)}export function forAll2(e,t,r){return!exists2(((t,r)=>!e(t,r)),t,r)}export function tryHead(e){if(isArrayLike(e))return tryHead_1(e);if(e instanceof FSharpList)return tryHead_2(e);{const t=ofSeq(e);try{return t["System.Collections.IEnumerator.MoveNext"]()?some(t["System.Collections.Generic.IEnumerator`1.get_Current"]()):void 0}finally{disposeSafe(t)}}}export function head(e){const t=tryHead(e);if(null==t)throw new Error(SR_inputSequenceEmpty+"\\nParameter name: source");return value_1(t)}export function initialize(e,t){return unfold((r=>r<e?[t(r),r+1]:void 0),0)}export function initializeInfinite(e){return initialize(2147483647,e)}export function isEmpty(e){if(isArrayLike(e))return 0===e.length;if(e instanceof FSharpList)return isEmpty_1(e);{const t=ofSeq(e);try{return!t["System.Collections.IEnumerator.MoveNext"]()}finally{disposeSafe(t)}}}export function tryItem(e,t){if(isArrayLike(t))return tryItem_1(e,t);if(t instanceof FSharpList)return tryItem_2(e,t);{const r=ofSeq(t);try{return(e=>{for(;;){const t=e;if(!r["System.Collections.IEnumerator.MoveNext"]())return;if(0===t)return some(r["System.Collections.Generic.IEnumerator`1.get_Current"]());e=t-1}})(e)}finally{disposeSafe(r)}}}export function item(e,t){const r=tryItem(e,t);if(null==r)throw new Error(SR_notEnoughElements+"\\nParameter name: index");return value_1(r)}export function iterate(e,t){fold(((t,r)=>{e(r)}),void 0,t)}export function iterate2(e,t,r){fold2(((t,r,n)=>{e(r,n)}),void 0,t,r)}export function iterateIndexed(e,t){fold(((t,r)=>(e(t,r),t+1|0)),0,t)}export function iterateIndexed2(e,t,r){fold2(((t,r,n)=>(e(t,r,n),t+1|0)),0,t,r)}export function tryLast(e){const t=ofSeq(e);try{const e=e=>{for(;;){const r=e;if(!t["System.Collections.IEnumerator.MoveNext"]())return r;e=t["System.Collections.Generic.IEnumerator`1.get_Current"]()}};return t["System.Collections.IEnumerator.MoveNext"]()?some(e(t["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0}finally{disposeSafe(t)}}export function last(e){const t=tryLast(e);if(null==t)throw new Error(SR_notEnoughElements+"\\nParameter name: source");return value_1(t)}export function length(e){if(isArrayLike(e))return 0|e.length;if(e instanceof FSharpList)return 0|length_1(e);{const t=ofSeq(e);try{let e=0;for(;t["System.Collections.IEnumerator.MoveNext"]();)e=e+1|0;return 0|e}finally{disposeSafe(t)}}}export function map(e,t){return generate((()=>ofSeq(t)),(t=>t["System.Collections.IEnumerator.MoveNext"]()?some(e(t["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0),(e=>{disposeSafe(e)}))}export function mapIndexed(e,t){return generateIndexed((()=>ofSeq(t)),((t,r)=>r["System.Collections.IEnumerator.MoveNext"]()?some(e(t,r["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0),(e=>{disposeSafe(e)}))}export function indexed(e){return mapIndexed(((e,t)=>[e,t]),e)}export function map2(e,t,r){return generate((()=>[ofSeq(t),ofSeq(r)]),(t=>{const r=t[0],n=t[1];return r["System.Collections.IEnumerator.MoveNext"]()&&n["System.Collections.IEnumerator.MoveNext"]()?some(e(r["System.Collections.Generic.IEnumerator`1.get_Current"](),n["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0}),(e=>{try{disposeSafe(e[0])}finally{disposeSafe(e[1])}}))}export function mapIndexed2(e,t,r){return generateIndexed((()=>[ofSeq(t),ofSeq(r)]),((t,r)=>{const n=r[0],o=r[1];return n["System.Collections.IEnumerator.MoveNext"]()&&o["System.Collections.IEnumerator.MoveNext"]()?some(e(t,n["System.Collections.Generic.IEnumerator`1.get_Current"](),o["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0}),(e=>{try{disposeSafe(e[0])}finally{disposeSafe(e[1])}}))}export function map3(e,t,r,n){return generate((()=>[ofSeq(t),ofSeq(r),ofSeq(n)]),(t=>{const r=t[0],n=t[1],o=t[2];return r["System.Collections.IEnumerator.MoveNext"]()&&n["System.Collections.IEnumerator.MoveNext"]()&&o["System.Collections.IEnumerator.MoveNext"]()?some(e(r["System.Collections.Generic.IEnumerator`1.get_Current"](),n["System.Collections.Generic.IEnumerator`1.get_Current"](),o["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0}),(e=>{try{disposeSafe(e[0])}finally{try{disposeSafe(e[1])}finally{disposeSafe(e[2])}}}))}export function readOnly(e){return checkNonNull("source",e),map((e=>e),e)}export class CachedSeq$1{constructor(e,t){this.cleanup=e,this.res=t}Dispose(){this.cleanup()}GetEnumerator(){return getEnumerator(this.res)}[Symbol.iterator](){return toIterator(this.GetEnumerator())}"System.Collections.IEnumerable.GetEnumerator"(){return getEnumerator(this.res)}}export function CachedSeq$1$reflection(e){return class_type("SeqModule.CachedSeq`1",[e],CachedSeq$1)}export function CachedSeq$1_$ctor_Z7A8347D4(e,t){return new CachedSeq$1(e,t)}export function CachedSeq$1__Clear(e){e.cleanup()}export function cache(e){checkNonNull("source",e);const t=[];let r;return CachedSeq$1_$ctor_Z7A8347D4((()=>{Operators_Lock(t,(()=>{let e,n;clear(t),null!=r&&null!=value_1(r)?(e=0,n=value_1(r)):e=1,0===e&&disposeSafe(n),r=void 0}))}),unfold((n=>Operators_Lock(t,(()=>{if(n<t.length)return[t[n],n+1];if(n>=t.length){let n;if(null!=r)n=value_1(r);else{const t=getEnumerator(e);r=some(t),n=t}if(null==n);else{const e=n;e["System.Collections.IEnumerator.MoveNext"]()?t.push(e["System.Collections.Generic.IEnumerator`1.get_Current"]()):(disposeSafe(e),r=some(void 0))}}return n<t.length?[t[n],n+1]:void 0}))),0))}export function allPairs(e,t){const r=cache(t);return delay((()=>concat(map((e=>map((t=>[e,t]),r)),e))))}export function mapFold(e,t,r){const n=mapFold_1(e,t,toArray(r),null);return[readOnly(n[0]),n[1]]}export function mapFoldBack(e,t,r){const n=mapFoldBack_1(e,toArray(t),r,null);return[readOnly(n[0]),n[1]]}export function tryPick(e,t){const r=ofSeq(t);try{let t;for(;null==t&&r["System.Collections.IEnumerator.MoveNext"]();)t=e(r["System.Collections.Generic.IEnumerator`1.get_Current"]());return t}finally{disposeSafe(r)}}export function pick(e,t){const r=tryPick(e,t);return null==r?indexNotFound():value_1(r)}export function reduce(e,t){const r=ofSeq(t);try{const t=t=>{for(;;){const n=t;if(!r["System.Collections.IEnumerator.MoveNext"]())return n;t=e(n,r["System.Collections.Generic.IEnumerator`1.get_Current"]())}};if(r["System.Collections.IEnumerator.MoveNext"]())return t(r["System.Collections.Generic.IEnumerator`1.get_Current"]());throw new Error(SR_inputSequenceEmpty)}finally{disposeSafe(r)}}export function reduceBack(e,t){const r=toArray(t);if(r.length>0)return r.reduceRight(e);throw new Error(SR_inputSequenceEmpty)}export function replicate(e,t){return initialize(e,(e=>t))}export function reverse(e){return delay((()=>ofArray(reverse_1(toArray(e)))))}export function scan(e,t,r){return delay((()=>{let n=t;return concat([singleton(t),map((t=>(n=e(n,t),n)),r)])}))}export function scanBack(e,t,r){return delay((()=>ofArray(scanBack_1(e,toArray(t),r,null))))}export function skip(e,t){return mkSeq((()=>{const r=ofSeq(t);try{for(let t=1;t<=e;t++)if(!r["System.Collections.IEnumerator.MoveNext"]())throw new Error(SR_notEnoughElements+"\\nParameter name: source");return Enumerator_enumerateThenFinally((()=>{}),r)}catch(e){throw disposeSafe(r),e}}))}export function skipWhile(e,t){return delay((()=>{let r=!0;return filter((t=>(r&&(r=e(t)),!r)),t)}))}export function tail(e){return skip(1,e)}export function take(e,t){return generateIndexed((()=>ofSeq(t)),((t,r)=>{if(t<e){if(r["System.Collections.IEnumerator.MoveNext"]())return some(r["System.Collections.Generic.IEnumerator`1.get_Current"]());throw new Error(SR_notEnoughElements+"\\nParameter name: source")}}),(e=>{disposeSafe(e)}))}export function takeWhile(e,t){return generate((()=>ofSeq(t)),(t=>t["System.Collections.IEnumerator.MoveNext"]()&&e(t["System.Collections.Generic.IEnumerator`1.get_Current"]())?some(t["System.Collections.Generic.IEnumerator`1.get_Current"]()):void 0),(e=>{disposeSafe(e)}))}export function truncate(e,t){return generateIndexed((()=>ofSeq(t)),((t,r)=>t<e&&r["System.Collections.IEnumerator.MoveNext"]()?some(r["System.Collections.Generic.IEnumerator`1.get_Current"]()):void 0),(e=>{disposeSafe(e)}))}export function zip(e,t){return map2(((e,t)=>[e,t]),e,t)}export function zip3(e,t,r){return map3(((e,t,r)=>[e,t,r]),e,t,r)}export function collect(e,t){return delay((()=>concat(map(e,t))))}export function where(e,t){return filter(e,t)}export function pairwise(e){return delay((()=>ofArray(pairwise_1(toArray(e)))))}export function splitInto(e,t){return delay((()=>ofArray(splitInto_1(e,toArray(t)))))}export function windowed(e,t){return delay((()=>ofArray(windowed_1(e,toArray(t)))))}export function transpose(e){return delay((()=>ofArray(map_1(ofArray,transpose_1(map_1(toArray,toArray(e),null),null),null))))}export function sortWith(e,t){return delay((()=>{const r=toArray(t);return r.sort(e),ofArray(r)}))}export function sort(e,t){return sortWith(((e,r)=>t.Compare(e,r)),e)}export function sortBy(e,t,r){return sortWith(((t,n)=>r.Compare(e(t),e(n))),t)}export function sortDescending(e,t){return sortWith(((e,r)=>-1*t.Compare(e,r)),e)}export function sortByDescending(e,t,r){return sortWith(((t,n)=>-1*r.Compare(e(t),e(n))),t)}export function sum(e,t){return fold(((e,r)=>t.Add(e,r)),t.GetZero(),e)}export function sumBy(e,t,r){return fold(((t,n)=>r.Add(t,e(n))),r.GetZero(),t)}export function maxBy(e,t,r){return reduce(((t,n)=>r.Compare(e(n),e(t))>0?n:t),t)}export function max(e,t){return reduce(((e,r)=>t.Compare(r,e)>0?r:e),e)}export function minBy(e,t,r){return reduce(((t,n)=>r.Compare(e(n),e(t))>0?t:n),t)}export function min(e,t){return reduce(((e,r)=>t.Compare(r,e)>0?e:r),e)}export function average(e,t){let r=0;const n=fold(((e,n)=>(r=r+1|0,t.Add(e,n))),t.GetZero(),e);if(0===r)throw new Error(SR_inputSequenceEmpty+"\\nParameter name: source");return t.DivideByInt(n,r)}export function averageBy(e,t,r){let n=0;const o=fold(((t,o)=>(n=n+1|0,r.Add(t,e(o)))),r.GetZero(),t);if(0===n)throw new Error(SR_inputSequenceEmpty+"\\nParameter name: source");return r.DivideByInt(o,n)}export function permute(e,t){return delay((()=>ofArray(permute_1(e,toArray(t)))))}export function chunkBySize(e,t){return delay((()=>ofArray(chunkBySize_1(e,toArray(t)))))}export function insertAt(e,t,r){let n=!1;if(e<0)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return generateIndexed((()=>ofSeq(r)),((r,o)=>{if((n||r<e)&&o["System.Collections.IEnumerator.MoveNext"]())return some(o["System.Collections.Generic.IEnumerator`1.get_Current"]());if(r===e)return n=!0,some(t);if(!n)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")}),(e=>{disposeSafe(e)}))}export function insertManyAt(e,t,r){let n=-1;if(e<0)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return generateIndexed((()=>[ofSeq(r),ofSeq(t)]),((t,r)=>{const o=r[0],i=r[1];let u;if(t===e&&(n=0),0===n?i["System.Collections.IEnumerator.MoveNext"]()?u=some(i["System.Collections.Generic.IEnumerator`1.get_Current"]()):(n=1,u=void 0):u=void 0,null!=u)return some(value_1(u));if(o["System.Collections.IEnumerator.MoveNext"]())return some(o["System.Collections.Generic.IEnumerator`1.get_Current"]());if(n<1)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")}),(e=>{disposeSafe(e[0]),disposeSafe(e[1])}))}export function removeAt(e,t){let r=!1;if(e<0)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return generateIndexed((()=>ofSeq(t)),((t,n)=>{if((r||t<e)&&n["System.Collections.IEnumerator.MoveNext"]())return some(n["System.Collections.Generic.IEnumerator`1.get_Current"]());if(t===e&&n["System.Collections.IEnumerator.MoveNext"]())return r=!0,n["System.Collections.IEnumerator.MoveNext"]()?some(n["System.Collections.Generic.IEnumerator`1.get_Current"]()):void 0;if(!r)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")}),(e=>{disposeSafe(e)}))}export function removeManyAt(e,t,r){if(e<0)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return generateIndexed((()=>ofSeq(r)),((r,n)=>{if(r<e){if(n["System.Collections.IEnumerator.MoveNext"]())return some(n["System.Collections.Generic.IEnumerator`1.get_Current"]());throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")}if(r===e)for(let e=1;e<=t;e++)if(!n["System.Collections.IEnumerator.MoveNext"]())throw new Error(SR_indexOutOfBounds+"\\nParameter name: count");return n["System.Collections.IEnumerator.MoveNext"]()?some(n["System.Collections.Generic.IEnumerator`1.get_Current"]()):void 0}),(e=>{disposeSafe(e)}))}export function updateAt(e,t,r){let n=!1;if(e<0)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index");return generateIndexed((()=>ofSeq(r)),((r,o)=>{if((n||r<e)&&o["System.Collections.IEnumerator.MoveNext"]())return some(o["System.Collections.Generic.IEnumerator`1.get_Current"]());if(r===e&&o["System.Collections.IEnumerator.MoveNext"]())return n=!0,some(t);if(!n)throw new Error(SR_indexOutOfBounds+"\\nParameter name: index")}),(e=>{disposeSafe(e)}))}