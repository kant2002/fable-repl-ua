import{trim}from"./String.js";const guidRegex=/^[\(\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\)\}]{0,2}$/,guidRegexNoHyphen=/^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/,guidRegexHex=/^\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\}\}$/,guidHexCaptures=/^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;export function toString(e,t,r){if(!(t&&(null==t?void 0:t.length)>0))return e;switch(t){case"N":return e.replace(/-/g,"");case"D":return e;case"B":return"{"+e+"}";case"P":return"("+e+")";case"X":return e.replace(guidHexCaptures,"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}");default:throw new Error("Unrecognized Guid print format")}}export function parse(e){function t(e){return e.replace(guidRegexNoHyphen,"$1-$2-$3-$4-$5")}const r=e.trim().toLowerCase();if(guidRegex.test(r))return trim(r,"{","}","(",")");if(guidRegexNoHyphen.test(r))return t(r);if(guidRegexHex.test(r))return t(r.replace(/[\{\},]|0x/g,""));throw new Error("Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")}export function tryParse(e,t){try{return t.contents=parse(e),!0}catch(e){return!1}}export function newGuid(){let e="";for(let t=0;t++<36;)e+=51*t&52?(15^t?8^Math.random()*(20^t?16:4):4).toString(16):"-";return e}let _byteToHex,_hexToByte,_convertMapsInitialized=!1;function initConvertMaps(){_byteToHex=new Array(256),_hexToByte={};for(let e=0;e<256;e++)_byteToHex[e]=(e+256).toString(16).substr(1),_hexToByte[_byteToHex[e]]=e;_convertMapsInitialized=!0}export function guidToArray(e){_convertMapsInitialized||initConvertMaps();let t=0;const r=new Uint8Array(16);for(e.toLowerCase().replace(/[0-9a-f]{2}/g,(e=>{switch(t){case 0:case 1:case 2:case 3:r[3-t++]=_hexToByte[e];break;case 4:case 5:r[9-t++]=_hexToByte[e];break;case 6:case 7:r[13-t++]=_hexToByte[e];break;case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:r[t++]=_hexToByte[e]}}));t<16;)r[t++]=0;return r}export function arrayToGuid(e){if(16!==e.length)throw new Error("Byte array for GUID must be exactly 16 bytes long");return _convertMapsInitialized||initConvertMaps(),_byteToHex[e[3]]+_byteToHex[e[2]]+_byteToHex[e[1]]+_byteToHex[e[0]]+"-"+_byteToHex[e[5]]+_byteToHex[e[4]]+"-"+_byteToHex[e[7]]+_byteToHex[e[6]]+"-"+_byteToHex[e[8]]+_byteToHex[e[9]]+"-"+_byteToHex[e[10]]+_byteToHex[e[11]]+_byteToHex[e[12]]+_byteToHex[e[13]]+_byteToHex[e[14]]+_byteToHex[e[15]]}